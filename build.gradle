buildscript {
    ext {
        springBootVersion = '2.4.1'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.10.RELEASE"
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'camp.nextstep.edu'
    version = '0.0.1-SNAPSHOT'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    compileJava.options.encoding = 'UTF-8'

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-jdbc'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        runtimeOnly 'com.h2database:h2'

        testImplementation 'com.google.guava:guava:14.0.1'
        testImplementation 'io.rest-assured:rest-assured:3.3.0'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    test {
        useJUnitPlatform()
    }
}

project(':module-common') {
    bootJar {
        enabled = false
    }
    jar {
        enabled = true
    }

    dependencies {
        implementation 'org.flywaydb:flyway-core'
    }

    configurations {
        testClasses {
            extendsFrom(testImplementation)
        }
    }

    task testJar(type: Jar) {
        archiveClassifier.set('test')
        from sourceSets.test.output
    }

    // add the jar generated by the testJar task to the testClasses dependency
    artifacts {
        testClasses testJar
    }
}

project(':module-product') {
    bootJar {
        enabled = false
    }
    jar {
        enabled = true
    }

    dependencies {
        implementation project(':module-common')
        testImplementation project(path: ':module-common', configuration: 'testClasses')
    }
}

project(':module-menu') {
    bootJar {
        enabled = false
    }
    jar {
        enabled = true
    }

    dependencies {
        implementation project(':module-common')
        implementation project(':module-product')
        testImplementation project(':module-product')
        testImplementation project(path: ':module-common', configuration: 'testClasses')
    }
}

project(':module-table') {
    bootJar {
        enabled = false
    }
    jar {
        enabled = true
    }

    dependencies {
        implementation project(':module-common')
        testImplementation project(path: ':module-common', configuration: 'testClasses')
    }
}

project(':module-order') {
    bootJar {
        enabled = false
    }
    jar {
        enabled = true
    }

    dependencies {
        implementation project(':module-common')
        implementation project(':module-menu')
        implementation project(':module-table')
        testImplementation project(':module-product')
        testImplementation project(path: ':module-common', configuration: 'testClasses')
    }
}
